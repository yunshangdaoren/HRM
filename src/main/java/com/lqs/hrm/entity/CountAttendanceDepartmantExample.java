package com.lqs.hrm.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CountAttendanceDepartmantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public CountAttendanceDepartmantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCadIdIsNull() {
            addCriterion("cad_id is null");
            return (Criteria) this;
        }

        public Criteria andCadIdIsNotNull() {
            addCriterion("cad_id is not null");
            return (Criteria) this;
        }

        public Criteria andCadIdEqualTo(Integer value) {
            addCriterion("cad_id =", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdNotEqualTo(Integer value) {
            addCriterion("cad_id <>", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdGreaterThan(Integer value) {
            addCriterion("cad_id >", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cad_id >=", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdLessThan(Integer value) {
            addCriterion("cad_id <", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdLessThanOrEqualTo(Integer value) {
            addCriterion("cad_id <=", value, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdIn(List<Integer> values) {
            addCriterion("cad_id in", values, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdNotIn(List<Integer> values) {
            addCriterion("cad_id not in", values, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdBetween(Integer value1, Integer value2) {
            addCriterion("cad_id between", value1, value2, "cadId");
            return (Criteria) this;
        }

        public Criteria andCadIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cad_id not between", value1, value2, "cadId");
            return (Criteria) this;
        }

        public Criteria andSignDateIsNull() {
            addCriterion("sign_date is null");
            return (Criteria) this;
        }

        public Criteria andSignDateIsNotNull() {
            addCriterion("sign_date is not null");
            return (Criteria) this;
        }

        public Criteria andSignDateEqualTo(Date value) {
            addCriterion("sign_date =", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateNotEqualTo(Date value) {
            addCriterion("sign_date <>", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateGreaterThan(Date value) {
            addCriterion("sign_date >", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateGreaterThanOrEqualTo(Date value) {
            addCriterion("sign_date >=", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateLessThan(Date value) {
            addCriterion("sign_date <", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateLessThanOrEqualTo(Date value) {
            addCriterion("sign_date <=", value, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateIn(List<Date> values) {
            addCriterion("sign_date in", values, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateNotIn(List<Date> values) {
            addCriterion("sign_date not in", values, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateBetween(Date value1, Date value2) {
            addCriterion("sign_date between", value1, value2, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateNotBetween(Date value1, Date value2) {
            addCriterion("sign_date not between", value1, value2, "signDate");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("dept_id is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("dept_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Integer value) {
            addCriterion("dept_id =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Integer value) {
            addCriterion("dept_id <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Integer value) {
            addCriterion("dept_id >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dept_id >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Integer value) {
            addCriterion("dept_id <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Integer value) {
            addCriterion("dept_id <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Integer> values) {
            addCriterion("dept_id in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Integer> values) {
            addCriterion("dept_id not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Integer value1, Integer value2) {
            addCriterion("dept_id between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dept_id not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumIsNull() {
            addCriterion("dept_emp_num is null");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumIsNotNull() {
            addCriterion("dept_emp_num is not null");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumEqualTo(Integer value) {
            addCriterion("dept_emp_num =", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumNotEqualTo(Integer value) {
            addCriterion("dept_emp_num <>", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumGreaterThan(Integer value) {
            addCriterion("dept_emp_num >", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("dept_emp_num >=", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumLessThan(Integer value) {
            addCriterion("dept_emp_num <", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumLessThanOrEqualTo(Integer value) {
            addCriterion("dept_emp_num <=", value, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumIn(List<Integer> values) {
            addCriterion("dept_emp_num in", values, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumNotIn(List<Integer> values) {
            addCriterion("dept_emp_num not in", values, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumBetween(Integer value1, Integer value2) {
            addCriterion("dept_emp_num between", value1, value2, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andDeptEmpNumNotBetween(Integer value1, Integer value2) {
            addCriterion("dept_emp_num not between", value1, value2, "deptEmpNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumIsNull() {
            addCriterion("not_sign_num is null");
            return (Criteria) this;
        }

        public Criteria andNotSignNumIsNotNull() {
            addCriterion("not_sign_num is not null");
            return (Criteria) this;
        }

        public Criteria andNotSignNumEqualTo(Integer value) {
            addCriterion("not_sign_num =", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumNotEqualTo(Integer value) {
            addCriterion("not_sign_num <>", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumGreaterThan(Integer value) {
            addCriterion("not_sign_num >", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("not_sign_num >=", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumLessThan(Integer value) {
            addCriterion("not_sign_num <", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumLessThanOrEqualTo(Integer value) {
            addCriterion("not_sign_num <=", value, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumIn(List<Integer> values) {
            addCriterion("not_sign_num in", values, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumNotIn(List<Integer> values) {
            addCriterion("not_sign_num not in", values, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumBetween(Integer value1, Integer value2) {
            addCriterion("not_sign_num between", value1, value2, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andNotSignNumNotBetween(Integer value1, Integer value2) {
            addCriterion("not_sign_num not between", value1, value2, "notSignNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumIsNull() {
            addCriterion("sign_not_logout_num is null");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumIsNotNull() {
            addCriterion("sign_not_logout_num is not null");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumEqualTo(Integer value) {
            addCriterion("sign_not_logout_num =", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumNotEqualTo(Integer value) {
            addCriterion("sign_not_logout_num <>", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumGreaterThan(Integer value) {
            addCriterion("sign_not_logout_num >", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("sign_not_logout_num >=", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumLessThan(Integer value) {
            addCriterion("sign_not_logout_num <", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumLessThanOrEqualTo(Integer value) {
            addCriterion("sign_not_logout_num <=", value, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumIn(List<Integer> values) {
            addCriterion("sign_not_logout_num in", values, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumNotIn(List<Integer> values) {
            addCriterion("sign_not_logout_num not in", values, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumBetween(Integer value1, Integer value2) {
            addCriterion("sign_not_logout_num between", value1, value2, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignNotLogoutNumNotBetween(Integer value1, Integer value2) {
            addCriterion("sign_not_logout_num not between", value1, value2, "signNotLogoutNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumIsNull() {
            addCriterion("sign_leave_early_num is null");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumIsNotNull() {
            addCriterion("sign_leave_early_num is not null");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumEqualTo(Integer value) {
            addCriterion("sign_leave_early_num =", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumNotEqualTo(Integer value) {
            addCriterion("sign_leave_early_num <>", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumGreaterThan(Integer value) {
            addCriterion("sign_leave_early_num >", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("sign_leave_early_num >=", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumLessThan(Integer value) {
            addCriterion("sign_leave_early_num <", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumLessThanOrEqualTo(Integer value) {
            addCriterion("sign_leave_early_num <=", value, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumIn(List<Integer> values) {
            addCriterion("sign_leave_early_num in", values, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumNotIn(List<Integer> values) {
            addCriterion("sign_leave_early_num not in", values, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumBetween(Integer value1, Integer value2) {
            addCriterion("sign_leave_early_num between", value1, value2, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andSignLeaveEarlyNumNotBetween(Integer value1, Integer value2) {
            addCriterion("sign_leave_early_num not between", value1, value2, "signLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumIsNull() {
            addCriterion("late_not_leave_num is null");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumIsNotNull() {
            addCriterion("late_not_leave_num is not null");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumEqualTo(Integer value) {
            addCriterion("late_not_leave_num =", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumNotEqualTo(Integer value) {
            addCriterion("late_not_leave_num <>", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumGreaterThan(Integer value) {
            addCriterion("late_not_leave_num >", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("late_not_leave_num >=", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumLessThan(Integer value) {
            addCriterion("late_not_leave_num <", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumLessThanOrEqualTo(Integer value) {
            addCriterion("late_not_leave_num <=", value, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumIn(List<Integer> values) {
            addCriterion("late_not_leave_num in", values, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumNotIn(List<Integer> values) {
            addCriterion("late_not_leave_num not in", values, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumBetween(Integer value1, Integer value2) {
            addCriterion("late_not_leave_num between", value1, value2, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateNotLeaveNumNotBetween(Integer value1, Integer value2) {
            addCriterion("late_not_leave_num not between", value1, value2, "lateNotLeaveNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumIsNull() {
            addCriterion("late_leave_early_num is null");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumIsNotNull() {
            addCriterion("late_leave_early_num is not null");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumEqualTo(Integer value) {
            addCriterion("late_leave_early_num =", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumNotEqualTo(Integer value) {
            addCriterion("late_leave_early_num <>", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumGreaterThan(Integer value) {
            addCriterion("late_leave_early_num >", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("late_leave_early_num >=", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumLessThan(Integer value) {
            addCriterion("late_leave_early_num <", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumLessThanOrEqualTo(Integer value) {
            addCriterion("late_leave_early_num <=", value, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumIn(List<Integer> values) {
            addCriterion("late_leave_early_num in", values, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumNotIn(List<Integer> values) {
            addCriterion("late_leave_early_num not in", values, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumBetween(Integer value1, Integer value2) {
            addCriterion("late_leave_early_num between", value1, value2, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andLateLeaveEarlyNumNotBetween(Integer value1, Integer value2) {
            addCriterion("late_leave_early_num not between", value1, value2, "lateLeaveEarlyNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumIsNull() {
            addCriterion("normal_num is null");
            return (Criteria) this;
        }

        public Criteria andNormalNumIsNotNull() {
            addCriterion("normal_num is not null");
            return (Criteria) this;
        }

        public Criteria andNormalNumEqualTo(Integer value) {
            addCriterion("normal_num =", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumNotEqualTo(Integer value) {
            addCriterion("normal_num <>", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumGreaterThan(Integer value) {
            addCriterion("normal_num >", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("normal_num >=", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumLessThan(Integer value) {
            addCriterion("normal_num <", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumLessThanOrEqualTo(Integer value) {
            addCriterion("normal_num <=", value, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumIn(List<Integer> values) {
            addCriterion("normal_num in", values, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumNotIn(List<Integer> values) {
            addCriterion("normal_num not in", values, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumBetween(Integer value1, Integer value2) {
            addCriterion("normal_num between", value1, value2, "normalNum");
            return (Criteria) this;
        }

        public Criteria andNormalNumNotBetween(Integer value1, Integer value2) {
            addCriterion("normal_num not between", value1, value2, "normalNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated do_not_delete_during_merge Tue May 26 23:34:06 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table count_attendance_departmant
     *
     * @mbg.generated Tue May 26 23:34:06 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}